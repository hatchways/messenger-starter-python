name: example-basic
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Use Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8.5"
          cache: "pip"

      - name: Spawn database
        run: docker run -d -p 5432:5432 -e POSTGRES_DB=postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=now3ef239vlkn postgres

      - name: Prepare server
        working-directory: server
        run: |
          pip install -r requirements.txt
          cat >.env <<EOF
          SECRET_KEY=oiwnewerJlw70238974
          ENV=development
          POSTGRES_ENGINE=django.db.backends.postgresql_psycopg2
          POSTGRES_HOST=localhost
          POSTGRES_PORT=5432
          POSTGRES_DATABASE=postgres
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=now3ef239vlkn
          EOF
          python manage.py makemigrations
          python manage.py migrate
          python manage.py shell <<EOF
          from messenger_backend.seed import seed
          seed()
          exit()
          EOF

      - name: Start server in the background
        working-directory: server
        run: python manage.py runserver &

      - name: Cypress
        uses: cypress-io/github-action@v2
        with:
          working-directory: client
          env: PORT=3000
          start: npm run start
          wait-on: "http://localhost:3000/"
          wait-on-timeout: 60

      - name: Save screenshots
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-screenshots
          path: client/cypress/screenshots

      - name: Save videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: client/cypress/videos
